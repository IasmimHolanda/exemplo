// Rota para listar todas as pessoas
app.get('/pessoas', async (req, res) => {
  try {
    const pessoas = await Pessoa.getAll();
    res.setHeader('Content-Type', 'application/json');
    res.json(pessoas);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Erro ao buscar as pessoas' });
  }
});

// Rota para criar uma pessoa
app.post('/pessoas', async (req, res) => {
  try {
    const { nome, idade, email } = req.body;
    const novaPessoa = await Pessoa.create(nome, idade, email);
    res.json(novaPessoa);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Erro ao criar a pessoa' });
  }
});

// Rota para buscar uma pessoa por ID
app.get('/pessoas/:id', async (req, res) => {
  try {
    const pessoaId = req.params.id;
    const pessoa = await Pessoa.getById(pessoaId);
    if (pessoa) {
      res.json(pessoa);
    } else {
      res.status(404).json({ error: 'Pessoa nÃ£o encontrada' });
    }
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Erro ao buscar a pessoa' });
  }
});

// Rota para atualizar uma pessoa por ID
app.put('/pessoas/:id', async (req, res) => {
  try {
    const pessoaId = req.params.id;
    const { nome, idade, email } = req.body;
    const pessoaAtualizada = await Pessoa.update(pessoaId, nome, idade, email);
    res.json(pessoaAtualizada);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Erro ao atualizar a pessoa' });
  }
});

// Rota para deletar uma pessoa por ID
app.delete('/pessoas/:id', async (req, res) => {
  try {
    const pessoaId = req.params.id;
    await Pessoa.delete(pessoaId);
    res.json({ message: 'Pessoa deletada com sucesso' });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Erro ao deletar a pessoa' });
  }
});